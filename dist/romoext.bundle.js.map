{"version":3,"file":"romoext.bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://romonitorstatsextension/./src/pages/common.js","webpack://romonitorstatsextension/./src/pages/discover_page.js","webpack://romonitorstatsextension/./src/pages/game_page.js","webpack://romonitorstatsextension/./src/pages/home_page.js","webpack://romonitorstatsextension/webpack/bootstrap","webpack://romonitorstatsextension/webpack/runtime/define property getters","webpack://romonitorstatsextension/webpack/runtime/hasOwnProperty shorthand","webpack://romonitorstatsextension/webpack/runtime/make namespace object","webpack://romonitorstatsextension/./src/romoext.js"],"sourcesContent":["\nfunction romonitorResponseHandler(response) {\n    if (response.status === 429) {\n        this.createRobloxError(\"You're sending too many requests to RoMonitor Stats\");\n        return;\n    } else if (response.status === 500) {\n        this.createRobloxError('RoMonitor Stats hit an exception, our monitoring tool has logged this');\n        return;\n    } else if (response.status === 404) {\n        this.createRobloxError('The RoMonitor Stats extension endpoint is not available');\n        return;\n    } else if (response.status === 502) {\n        this.createRobloxError('RoMonitor Stats is currently undergoing maintainance');\n        return;\n    } else if (response.status === 422) {\n        this.createRobloxError('Invalid request sent to RoMonitor Stats');\n        return;\n    }\n    return response.json();\n}\n\nfunction romonitorErrorHandler(error) {\n    createRobloxError('Unable to contact RoMonitor Stats');\n    Promise.reject(error);\n}\n\nfunction createRobloxError(message, icon = 'icon-warning', code = null) {\n    const tabContainer = document.getElementsByClassName('col-xs-12 rbx-tabs-horizontal')[0];\n    const messageBanner = document.createElement('div');\n\n    messageBanner.classList.add('message-banner');\n    messageBanner.innerHTML = `<span class=\"${icon}\"></span> ${message}`;\n    messageBanner.style = 'margin-bottom: 1em; margin-top: 1em;';\n    tabContainer.insertBefore(messageBanner, tabContainer.firstChild);\n}\n\nlet config = {\n    apiEndpoint: 'https://romonitorstats.com/api/v1/',\n    poweredBy: `Powered by <a href=\"https://romonitorstats.com/\" class=\"text-link\">RoMonitor Stats</a>`,\n    poweredByText: `Powered by RoMonitor Stats`\n}\n\nlet common;\n\ncommon = {\n    config: config,\n    createRobloxError: createRobloxError,\n\n    async postData(data = {}, extension) {\n        return await fetch(config.apiEndpoint + extension, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n            .then((response) => romonitorResponseHandler(response))\n            .catch((error) => romonitorErrorHandler(error));\n    },\n\n    async getData(uri) {\n        return await fetch(uri,).then((response) => romonitorResponseHandler(response)).catch((error) => romonitorErrorHandler(error))\n    },\n\n    // Roblox home page has play count with k's, for example 1000 would be 1k. \n    // Use this function to convert from an int to the required string version. \n    fixPlayCount(count) {\n        if (count < 1000) {\n            return toString(count);\n        }\n        else if (count < 1000000) {\n            return (Math.round(10 * count / 1000) / 10).toString() + \"k\"\n        }\n        else {\n            return (Math.round(10 * count / 1000000) / 10).toString() + \"m\"\n        }\n    },\n\n    // Convert the 0-100 number to a percentage formatted in the same was as on the home page.\n    fixPercentage(percentage) {\n        return Math.round(percentage).toString() + \"%\"\n    },\n\n    async getDiscoverData() {\n        return await common.getData(config.apiEndpoint + \"stats/featured-games/get/\")\n            \n    }\n\n}\n\n\nexport default common;","import common from './common'\n\nlet discoverConfig = {\n    data: null,\n    discoverId: \"romonitor-discover-carousel\",\n    robloxGameUri: \"https://www.roblox.com/games/\",\n    leftId: \"romonitor-left\",\n    rightId: \"romonitor-right\",\n    maxCards: 5,\n    cardWidth: 208\n\n}\n\nlet current = 0;\n\nexport default {\n    extendDiscover: async function () {\n        await common.getDiscoverData().then(\n            (data) => {\n                discoverConfig.data = data;\n            }\n        );\n\n        buildDiscoverSearch();\n    }\n}\n\nfunction buildDiscoverSearch() {\n    let container;\n\n    // Perform a bunch of checks here to make sure the \n    // HTML looks like it is expected, to avoid extension breaking/doing \n    // weird things if webpage is updated in the future. \n    \n    const carouselList = document.getElementById(\"games-carousel-page\");\n    if (!carouselList) {\n        return\n    }\n\n\n    // Once the search/carousel container is found, add our new search to the page. \n    carouselList.insertBefore(buildGameListContainer(), carouselList.children.item(2));\n\n    // Function puts the title/search in the correct place on the page. \n    // updateHomePage(carouselList);\n\n    // Unfortunately since the DOM does not load consistently, sometimes the insertion happens \n    // before the other searches have loaded. To combat this, we add a MutationObserver which \n    // removes and adds the carousel/title every time the children of the container are updated\n    // to ensure that our title/carousel is always in the same place. \n    const config = {\n        childList: true\n    };\n\n    const callback = function (mutations, observer) {\n        const carouselList = document.getElementById(\"games-carousel-page\");\n        const config = {\n            childList: true\n        };\n\n        observer.disconnect();\n        updateDiscoverPage(carouselList);\n        observer.observe(carouselList, config);\n    }\n\n    const observer = new MutationObserver(callback);\n    observer.observe(carouselList, config);\n}\n\nfunction updateDiscoverPage(carouselList) {\n    const title = document.getElementById(discoverConfig.discoverId);\n    carouselList.removeChild(title);\n    carouselList.insertBefore(buildGameListContainer(), carouselList.children.item(2));\n}\n\nfunction buildGameListContainer() {\n    const container = document.createElement(\"div\");\n    container.id = discoverConfig.discoverId\n\n    container.setAttribute(\"data-testid\", \"game-carousel-games-container\");\n    container.className = \"games-list-container\"\n\n    container.appendChild(buildHeader(\"Top Experiences\", \"/\"));\n    container.appendChild(buildList());\n    \n    return container;\n}\n\nfunction buildHeader(title, href) {\n    const header = document.createElement(\"div\");\n    header.setAttribute(\"data-testid\", \"game-lists-game-container-header\");\n    header.setAttribute(\"class\", \"container-header games-filter-changer\");\n\n    header.innerHTML = `\n        <h2>${title}</h2>\n        <a\n            href=\"${href}\"\n            class=\"see-all-button games-filter-changer btn-secondary-xs btn-more see-all-link-icon\"\n            data-testid=\"game-lists-game-container-header-see-all-button\">${common.config.poweredByText}</a>\n        `\n    return header\n}\n\nfunction buildList() {\n    const scroller = document.createElement(\"div\");\n    scroller.setAttribute(\"class\", \"horizontal-scroller games-list large-tiles\");\n\n    const container = document.createElement(\"div\");\n    container.setAttribute(\"class\", \"clearfix horizontal-scroll-window\");\n    container.setAttribute(\"data-testid\", \"game-carousel-carousel-container\");\n    scroller.appendChild(container);\n\n    container.appendChild(buildCarousel());\n    container.appendChild(buildLeftButton())\n    container.appendChild(buildRightButton())\n\n    return scroller;\n}\n\nfunction calculateCardsPerScreen() {\n    let availableWidth = document.getElementsByClassName(\"games-list-container\")[0].clientWidth;\n    let possibleCards = availableWidth / discoverConfig.cardWidth;\n\n    if (possibleCards > discoverConfig.maxCards) {\n        return discoverConfig.maxCards;\n    }\n\n    return possibleCards;\n}\n\nfunction buildLeftButton() {\n    const leftScroll = document.createElement(\"div\");\n    leftScroll.setAttribute(\"class\", `scroller prev disabled ${discoverConfig.leftId}`);\n    leftScroll.setAttribute(\"data-testid\", \"game-carousel-scroll-bar\");\n    leftScroll.setAttribute(\"role\", \"button\");\n    leftScroll.setAttribute(\"tabindex\", \"0\");\n\n    leftScroll.innerHTML = \n        `\n        <div class=\"arrow\">\n            <span class=\"icon-games-carousel-left\"></span>\n        </div>\n        <div class=\"spacer\"></div>\n    \n        `\n    leftScroll.addEventListener(\"click\", (e) => {\n        changeCurrent(-calculateCardsPerScreen());\n        updateCarousel;\n    });\n    return leftScroll;\n\n}\n\nfunction buildRightButton() {\n    const rightScroll = document.createElement(\"div\");\n    rightScroll.setAttribute(\"class\", `scroller next ${discoverConfig.rightId}`);\n    rightScroll.setAttribute(\"data-testid\", \"game-carousel-scroll-bar\");\n    rightScroll.setAttribute(\"role\", \"button\");\n    rightScroll.setAttribute(\"tabindex\", \"0\");\n\n    rightScroll.innerHTML = \n        `\n        <div class=\"arrow\">\n            <span class=\"icon-games-carousel-right\"></span>\n        </div>\n        <div class=\"spacer\"></div>\n    \n        `\n    rightScroll.addEventListener(\"click\", (e) => {\n        changeCurrent(calculateCardsPerScreen());\n    });\n    return rightScroll;\n}\n\nfunction changeCurrent(delta) {\n    current = current + delta;\n\n    if (current < 0) {\n        current = 0;\n    }\n    else if (current > discoverConfig.data.length - 1) {\n        current = discoverConfig.data.length - 1;\n    }\n\n    let newPx = -current * discoverConfig.cardWidth;\n\n    let carousel = document.getElementById(\"romonitor-carousel\");\n    carousel.setAttribute(\"style\", `left: ${newPx}px;`)\n}\n\nfunction buildCarousel() {\n    const carousel = document.createElement(\"div\");\n    carousel.setAttribute(\"class\", \"horizontally-scrollable\");\n    carousel.setAttribute(\"style\", \"left: 0px;\");\n    carousel.setAttribute(\"id\", \"romonitor-carousel\");\n\n    const ul = document.createElement(\"ul\");\n    ul.setAttribute(\"class\", \"hlist games game-cards game-tile-list\")\n    carousel.appendChild(ul);\n\n    let length = discoverConfig.data.length - 1; \n\n    discoverConfig.data.forEach((game, index) => {\n        if (index == 0) {\n            ul.appendChild(buildGame(game, \"first-tile\"));\n\n        } \n        else if (index == length) {\n            ul.appendChild(buildGame(game, \"last-tile\"));\n        } else{\n            ul.appendChild(buildGame(game))\n        }\n    });\n\n\n    return carousel; \n}\n\nfunction buildGame(game, extraClass=\"\") {\n    const href = discoverConfig.robloxGameUri + game.placeId\n    const li = document.createElement(\"li\");\n    li.setAttribute(\"class\", \"list-item hover-game-tile \" + extraClass);\n    li.id = game.placeId;\n    const liDiv = document.createElement(\"div\");\n    li.appendChild(liDiv);\n\n\n    liDiv.setAttribute(\"class\", \"featured-game-container game-card-container\");\n    liDiv.innerHTML = `\n        <a class=\"game-card-link\" href=\"${href}\">\n            <div class=\"featured-game-icon-container\">\n                <span class=\"thumbnail-2d-container brief-game-icon\">\n                    <img class src=\"${game.icon}\" alt=${game.name} title=\"${game.name}\"></img>\n                </span>\n            </div>\n            <div class=\"info-container\">\n                <div data-testid=\"game-tile-game-name\" class=\"game-card-name game-name-title\" title=\"${game.name}\">${game.name}</div>\n                <div data-testid=\"game-tile-card-info\" class=\"game-card-info\">\n                    <span class=\"info-label icon-votes-gray\"></span>\n                    <span class=\"info-label vote-percentage-label\" data-testid=\"game-tile-card-info-vote-label\">${common.fixPercentage(game.rating)}</span>\n                    <span class=\"info-label icon-playing-counts-gray\"></span>\n                    <span class=\"info-label playing-counts-label\" title=\"${game.playing}\">${common.fixPlayCount(game.playing)}</span>\n                </div>\n            </div>\n        </a>\n\n        <div>\n        </div>\n        `\n\n    \n\n\n    // Dynamic card \n    /*\n    If a Dynamic card hover wants to be added, a new div should be made here. Currently will be static. \n    */\n\n    return li;\n}\n\n/**\n * \n */","import common from './common'\n\nlet gameConfig = {\n    activePlaceID: null,\n    data: null,\n    apiExtension: \"extension/get/\",\n}\n\nlet loadingStore = {\n    socialGraph: false,\n};\n\nlet lastAddedTab = null;\nlet socialGraphData = null;\nlet nameChangesGraphData = null;\n\nexport default {\n    extendGame: async function () {\n        await getGame();\n\n        buildTabs();\n    }\n}\n\n// Get the data from API that is relevant the game page we are on. \nasync function getGame() {\n    gameConfig.activePlaceID = document.querySelector(\"#game-detail-page\").dataset.placeId;\n    return await common.postData({ game: gameConfig.activePlaceID }, gameConfig.apiExtension)\n        .then((data) => {\n            if (data && data.success) {\n                const tabFixCss = '.rbx-tab { width: 25% !important };';\n                const styleElement = document.createElement('style');\n                document.head.appendChild(styleElement);\n                styleElement.type = 'text/css';\n                styleElement.appendChild(document.createTextNode(tabFixCss));\n\n                gameConfig.data = data;\n\n            }\n            else if (data && data.success && data.message && data.code) {\n                common.createRobloxError(data.message, data.icon, data.code);\n            }\n\n        });\n}\n\nfunction getTabs() {\n    return [\n        {\n            title: 'Stats',\n            id: 'stats',\n        },\n        {\n            title: 'Milestones',\n            id: 'milestones',\n        },\n        {\n            title: 'Social Graph',\n            id: 'social-graph',\n        },\n        {\n            title: 'Name Changes',\n            id: 'name-changes',\n        },\n        {\n            title: 'RoMonitor Stats',\n            id: 'go-to-stats',\n            href: `https://romonitorstats.com/experience/${gameConfig.activePlaceID}/?utm_source=roblox&utm_medium=extension&utm_campaign=extension_leadthrough`,\n            target: '_blank',\n        }\n    ];\n}\n\nfunction buildTabs() {\n    lastAddedTab = null;\n\n    getTabs().forEach((tab) => {\n        var gameNavigationTabs = document.getElementById(\"horizontal-tabs\");\n        var newTab = gameNavigationTabs.lastElementChild.cloneNode(true);\n        var tabTitle = newTab.getElementsByClassName('text-lead')[0];\n\n        tabTitle.textContent = tab.title;\n        newTab.classList.remove(\"tab-game-instances\");\n        newTab.classList.add(`tab-${tab.id}`);\n        newTab.id = `tab-${tab.id}`;\n        newTab.firstElementChild.href = tab.href ? tab.href : `#${tab.id}`;\n\n        if (tab.target) {\n            newTab.firstElementChild.target = tab.target;\n        }\n\n        gameNavigationTabs.appendChild(newTab);\n\n        if (lastAddedTab) {\n            newTab.classList.remove(`tab-${lastAddedTab}`);\n        }\n\n        lastAddedTab = tab.id;\n\n        if (!tab.href) {\n            var firstTabContent = document.getElementById('about').cloneNode(true);\n            firstTabContent.id = tab.id;\n            firstTabContent.classList.add(tab.id);\n            firstTabContent.innerHTML = '';\n\n            document.getElementsByClassName(\"rbx-tab-content\")[0].appendChild(firstTabContent);\n            firstTabContent.classList.remove(\"active\");\n\n            const containerHeader = document.createElement('div');\n            containerHeader.classList.add('container-header');\n            const poweredByHtml =\n                containerHeader.innerHTML = `<h3>${tab.title}</h3><br><div class=\"text-secondary\" style=\"margin-top: 1em;\">${common.poweredBy}</div>`;\n            firstTabContent.appendChild(containerHeader);\n        }\n\n        /** The following are lightweight queries to our servers, so we build these to make the tabs load faster, others are dynamically injected. */\n        if (tab.title === 'Milestones') {\n            buildMilestonesTab();\n        } else if (tab.title === 'Stats') {\n            buildStatsTab();\n        }\n\n        if (!tab.href) {\n            addTabListener(newTab, firstTabContent)\n        }\n    });\n\n    /** Adds event listeners to the default Roblox tabs */\n    const baseRobloxTabs = ['about', 'store', 'game-instances'];\n    baseRobloxTabs.forEach((tab) => {\n        const tabElement = document.getElementById(`tab-${tab}`);\n\n        addTabListener(tabElement, document.getElementById(tab));\n    });\n}\n\nfunction addTabListener(tab, aboutContent) {\n    tab.addEventListener('click', function () {\n        removeAllTabActiveStates();\n\n        if (tab.id === 'tab-social-graph' || tab.id === 'tab-name-changes') {\n            if (tab.id === 'tab-social-graph' && socialGraphData) {\n                if (socialGraphData) {\n                    return;\n                } else {\n                    loadingStore.socialGraph = true;\n                }\n            }\n\n            if (tab.id === 'tab-name-changes' && nameChangesGraphData) {\n                if (nameChangesGraphData) {\n                    return;\n                } else {\n                    loadingStore.nameChangesGraph = true;\n                }\n            }\n\n            const socialGraphContainer = document.getElementsByClassName(`tab-pane ${tab.id.replace('tab-', '')}`)[0];\n            const loaderElement = document.createElement('span');\n            loaderElement.id = `${tab.id.replace('tab-', '')}-loader`;\n            loaderElement.classList.add('spinner');\n            loaderElement.classList.add('spinner-default');\n\n            socialGraphContainer.appendChild(loaderElement);\n\n            if (tab.id === 'tab-social-graph') {\n                tab.id = 'socialGraph';\n            } else if (tab.id === 'tab-name-changes') {\n                tab.id = 'nameChanges';\n            }\n\n            common.postData({ game: gameConfig.activePlaceID, tab: tab.id }, gameConfig.apiExtension)\n                .then((data) => {\n                    if (data.success) {\n                        if (tab.id === 'socialGraph') {\n                            socialGraphData = data['data'];\n                            buildSocialGraphTab();\n                            loadingStore.socialGraph = false;\n                        } else if (tab.id === 'nameChanges') {\n                            nameChangesGraphData = data['data'];\n                            buildNameChangesTab();\n                            loadingStore.nameChangesGraphData = false;\n                        }\n                    } else if (data && !data.success && data.message) {\n                        common.createRobloxError(data.message, data.icon);\n                    }\n                });\n        }\n\n        aboutContent.style.display = \"block\";\n        tab.classList.add('active');\n    }, false);\n}\n\nfunction removeAllTabActiveStates() {\n    NodeList.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n    HTMLCollection.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n    for (const tab of document.getElementById('horizontal-tabs').children) {\n        tab.classList.remove('active');\n    }\n\n    for (const tabContainer of document.getElementsByClassName(\"tab-pane\")) {\n        tabContainer.style.removeProperty('display');\n        tabContainer.classList.remove('active');\n    }\n}\n\nfunction buildStatsTab() {\n    const statsContainer = document.getElementsByClassName('tab-pane stats');\n    const flexboxContainer = document.createElement('div');\n    flexboxContainer.style = 'display: flex; flex-wrap: wrap;';\n\n    /** Set Rating Card -- We use the data already on the games page for this */\n    const upVotes = Number(document.getElementsByClassName('count-left')[0].firstElementChild.title)\n    const downVotes = Number(document.getElementsByClassName('count-right')[0].firstElementChild.title)\n\n    gameConfig.data.stats.items.push({\n        title: 'Rating',\n        copy: `${(upVotes / (upVotes + downVotes) * 100).toFixed(2)}%`,\n    });\n\n    gameConfig.data.stats.items.forEach((item) => {\n        const gridEntry = document.createElement('div');\n        gridEntry.classList.add('romonitor-grid-item');\n        gridEntry.innerHTML =  `<h2 style=\"\n                                    text-align: center;\n                                    \">${item.copy}</h2>\n                                    <p style=\"\n                                       text-align: center;\n                                        \">${item.title}</p>`\n        flexboxContainer.appendChild(gridEntry);\n    });\n\n    statsContainer[0].appendChild(flexboxContainer);\n}\n\nfunction buildMilestonesTab() {\n    const milestonesContainer = document.getElementsByClassName('tab-pane milestones');\n    const milestonesTable = document.createElement('table');\n    milestonesTable.classList.add('table');\n    milestonesTable.classList.add('table-striped');\n    milestonesTable.innerHTML = '<thead><tr><th class=\"text-label\">Milestone</th><th class=\"text-label\">Achived</th><th class=\"text-label\">Tweets</th></tr></thead><tbody id=\"milestones-table\"></tbody>';\n\n    if (!Object.keys(gameConfig.data.milestones).length) {\n        const messageBanner = document.createElement('div');\n\n        messageBanner.classList.add('message-banner');\n        messageBanner.innerHTML = `<span class=\"icon-warning\"></span> This game has no tracked milestones`;\n        messageBanner.style = 'margin-bottom: 1em; margin-top: 1em;';\n        milestonesContainer[0].appendChild(messageBanner);\n\n        return;\n    }\n\n    milestonesContainer[0].appendChild(milestonesTable);\n\n    Object.keys(gameConfig.data.milestones).reverse().forEach((milestoneIndex) => {\n        const milestone = gameConfig.data.milestones[milestoneIndex];\n        const milestoneEntry = document.createElement('tr');\n\n        const svg = `<a href=\"${milestone.tweet}\" target=\"_blank\"><svg class=\"romonitor-milestone-social-item\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"#1DA1F2\" d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"/></svg></a></div>`\n\n        milestoneEntry.innerHTML = `<td>${milestone.value} ${milestone.type}</td><td>${milestone.achieved}</td><td class=\"romonitor-tableitem\">${svg}</td>`;\n\n        document.getElementById('milestones-table').appendChild(milestoneEntry);\n    });\n}\n\nfunction buildNameChangesTab() {\n  document.getElementById('name-changes-loader').remove();\n  const nameChangesContainer = document.getElementsByClassName('tab-pane name-changes');\n  const nameChangesTable = document.createElement('table');\n  nameChangesTable.classList.add('table');\n  nameChangesTable.classList.add('table-striped');\n  nameChangesTable.innerHTML = '<thead><tr><th class=\"text-label\">Name</th><th class=\"text-label\">Changed</th></tr></thead><tbody id=\"name-changes-table\"></tbody>';\n\n  if (!Object.keys(nameChangesGraphData).length) {\n    const messageBanner = document.createElement('div');\n\n    messageBanner.classList.add('message-banner');\n    messageBanner.innerHTML = `<span class=\"icon-warning\"></span> This game has no tracked name changes`;\n    messageBanner.style = 'margin-bottom: 1em; margin-top: 1em;';\n    nameChangesContainer[0].appendChild(messageBanner);\n\n    return;\n  }\n  const limitWarning = document.createElement('div');\n  limitWarning.classList.add('text-label');\n  limitWarning.innerHTML = 'Showing the Last 10 Name Changes';\n\n  nameChangesContainer[0].appendChild(limitWarning);\n  nameChangesContainer[0].appendChild(nameChangesTable);\n\n  Object.keys(nameChangesGraphData).reverse().forEach((changeIndex) => {\n    const nameChange = nameChangesGraphData[changeIndex];\n    const changeEntry = document.createElement('tr');\n    changeEntry.innerHTML = `<td>${nameChange.name}</td><td>${nameChange.changed}</td>`;\n\n    document.getElementById('name-changes-table').appendChild(changeEntry);\n  });\n}\n\nfunction buildSocialGraphTab() {\n  document.getElementById('social-graph-loader').remove();\n  const socialGraphContainer = document.getElementsByClassName('tab-pane social-graph');\n\n  if (!socialGraphData.items) {\n    const socialGraphMessageBanner = document.createElement('div');\n\n    socialGraphMessageBanner.classList.add('message-banner');\n    socialGraphMessageBanner.innerHTML = `<span class=\"icon-warning\"></span> This game has no trackable social graph`;\n    socialGraphMessageBanner.style = 'margin-bottom: 1em; margin-top: 1em;';\n    socialGraphContainer[0].appendChild(socialGraphMessageBanner);\n  } else {\n    const flexboxContainer = document.createElement('div');\n\n    flexboxContainer.style = 'display: flex; flex-wrap: wrap;';\n    socialGraphData.items.forEach((item) => {\n      const gridEntry = document.createElement('div');\n      gridEntry.classList.add('romonitor-grid-item');\n      gridEntry.innerHTML = `<h2 style=\"\n      text-align: center;\n  \">${item.copy}</h2>\n      <p style=\"\n      text-align: center;\n  \">${item.title}</p>`\n      flexboxContainer.appendChild(gridEntry);\n    });\n\n    socialGraphContainer[0].appendChild(flexboxContainer);\n  }\n}\n\n","import common from './common'\n\nlet config = common.config;\nlet homeConfig = {\n    data: null\n}\n\n\nexport default {\n    extendPage: async function () {\n        await common.getDiscoverData().then(\n            (data) => {\n                homeConfig.data = data;\n            }\n        );\n\n        buildHomeSearch();\n    }\n}\n\n\nfunction buildHomeSearch() {\n    let container;\n\n    // Perform a bunch of checks here to make sure the \n    // HTML looks like it is expected, to avoid extension breaking/doing \n    // weird things if webpage is updated in the future. \n    {\n        let place_list = document.getElementById(\"place-list\");\n\n        if (!place_list) {\n            return;\n        }\n\n        container = place_list.getElementsByClassName(\"game-home-page-container\");\n    }\n\n    if (container.length != 1) {\n        return;\n    }\n    container = container[0]\n    if (container.nodeName != \"DIV\") {\n        return;\n    }\n\n    // Once the search/carousel container is found, add our new search to the page. \n    container.insertBefore(buildCarousel(), container.children.item(2));\n    container.insertBefore(buildHomePageTitle(\"Top Experiences\", \"https://romonitorstats.com/\"), container.children.item(2));\n\n    // Function puts the title/search in the correct place on the page. \n    updateHomePage(container);\n\n    // Unfortunately since the DOM does not load consistently, sometimes the insertion happens \n    // before the other searches have loaded. To combat this, we add a MutationObserver which \n    // removes and adds the carousel/title every time the children of the container are updated\n    // to ensure that our title/carousel is always in the same place. \n    const config = {\n        childList: true\n    };\n\n    const callback = function (mutations, observer) {\n        const container = document.getElementById(\"place-list\").getElementsByClassName(\"game-home-page-container\")[0];\n        const config = {\n            childList: true\n        };\n\n        observer.disconnect();\n        updateHomePage(container);\n        observer.observe(container, config);\n    }\n\n    const observer = new MutationObserver(callback);\n    observer.observe(container, config);\n}\n\n// Simply refreshes the page with our new element in a consistent location. \nfunction updateHomePage(container) {\n    const title = document.getElementById(\"romonitor-title\");\n    const search = document.getElementById(\"romonitor-search\");\n\n    if (title) {\n        container.removeChild(title);\n    }\n    if (search) {\n        container.removeChild(search)\n    }\n    if (search) {\n        container.insertBefore(search, container.children.item(2));\n    }\n    if (title) {\n        container.insertBefore(title, container.children.item(2));\n    }\n\n\n}\n\nfunction buildHomePageTitle(title, href) {\n    let newTitle = document.createElement(\"div\");\n    newTitle.className = 'container-header';\n    newTitle.innerHTML = `<h2>\n                          <a href=\"${href}\">\n                            ${title} \n                          </a>\n                        </h2>\n                        <div class=\"btn-secondary-xs see-all-link-icon btn-more\">\n                          ${config.poweredBy}\n                        </div>`;\n    newTitle.id = \"romonitor-title\";\n    return newTitle;\n}\n\nfunction buildCarousel() {\n    let newCarousel = document.createElement(\"div\");\n    newCarousel.setAttribute(\"class\", \"game-carousel\")\n    newCarousel.setAttribute(\"data-testid\", \"game-game-carousel\")\n    newCarousel.id = \"romonitor-search\"\n\n    // We loop just to make sure that the API has actually given us data\n    const dataAry = [];\n    let i = 0;\n    while (homeConfig.data.length > i && i < 6) {\n        dataAry.push(homeConfig.data[i]);\n        i++;\n    }\n\n    dataAry.forEach((game) => {\n        newCarousel.appendChild(buildGameCard(\n            \"https://www.roblox.com/games/\" + game.placeId, game.placeId, game.name, common.fixPercentage(game.rating), common.fixPlayCount(game.playing), game.icon\n        ));\n    });\n\n\n    return newCarousel;\n}\n\nfunction buildGameCard(href, id, title, votePercentage, playerCount, imgRef) {\n    // Build the card up from elements that reflect the HTMl on the home page. \n    // Class attributes are used for consistency with the home page. \n    let cardContainer = document.createElement(\"div\");\n    cardContainer.setAttribute(\"class\", \"grid-item-container game-card-container\");\n    cardContainer.setAttribute(\"data-testid\", \"game-title\");\n\n    let anchor = document.createElement(\"a\");\n    cardContainer.appendChild(anchor);\n\n    anchor.setAttribute(\"class\", \"game-card-link\");\n    anchor.setAttribute(\"href\", `${href}`)\n    anchor.setAttribute(\"id\", `${id}`)\n\n    let anchorChildren = [\n        document.createElement(\"span\"), // Image Holder\n        document.createElement(\"div\"), // Game Title\n        document.createElement(\"div\") // stats stuff\n    ]\n    anchorChildren.forEach((child) => anchor.appendChild(child));\n\n    // Add the child image tag for the span. \n    const img = document.createElement(\"img\");\n    img.setAttribute(\"src\", imgRef);\n    img.setAttribute(\"alt\", title);\n    img.setAttribute(\"title\", title);\n    anchorChildren[0].appendChild(img);\n\n    anchorChildren[0].setAttribute(\"class\", \"thumbnail-2d-container shimmer game-card-thumb-container\");\n    anchorChildren[1].setAttribute(\"class\", \"game-card-name game-name-title\");\n    anchorChildren[1].setAttribute(\"title\", `${title}`);\n    anchorChildren[1].innerHTML = title;\n    anchorChildren[2].setAttribute(\"class\", \"game-card-info\");\n    anchorChildren[2].setAttribute(\"data-testid\", \"game-tile-stats\");\n\n    let cardInfoChildren = [\n        document.createElement(\"span\"), // votePercentageIcon \n        document.createElement(\"span\"), // votePercentage \n        document.createElement(\"span\"), // playCountIcon \n        document.createElement(\"span\")  // playCount \n    ]\n    cardInfoChildren.forEach((child) => anchorChildren[2].appendChild(child));\n\n    cardInfoChildren[0].setAttribute(\"class\", \"info-label icon-votes-gray\");\n    cardInfoChildren[1].setAttribute(\"class\", \"info-label vote-percentage-label\");\n    cardInfoChildren[1].innerHTML = votePercentage;\n    cardInfoChildren[2].setAttribute(\"class\", \"info-label icon-playing-counts-gray\");\n    cardInfoChildren[3].setAttribute(\"class\", \"info-label playing-counts-label\");\n    cardInfoChildren[3].innerHTML = playerCount;\n\n\n    return cardContainer;\n}\n\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import gamePage from './pages/game_page'\nimport homePage from './pages/home_page'\nimport discover_page from './pages/discover_page'\n\n\nlet pageEnum = {\n    noPage: 0, // For when a page does not match any of the ones that the extension is interested in. \n    game: 1,\n    home: 2,\n    discover: 3\n}\n\nwindow.addEventListener('load', async function () {\n    // Result of prefab check indicates which type of page we are on. \n    const check_id = checkPage();\n\n\n    if (check_id == pageEnum.game) {\n        gamePage.extendGame();\n    } else if (check_id == pageEnum.home) {\n        homePage.extendPage();\n    } else if (check_id == pageEnum.discover) {\n        discover_page.extendDiscover();\n    }\n});\n\nfunction checkPage() {\n    const path = window.location.pathname;\n    /** Check we're on a Roblox games page */\n    if (path.match(/\\/games\\/.*/)) {\n        return pageEnum.game;\n    } else if (path.match(/\\/home/)) {\n        return pageEnum.home;\n    } else if (path.match(/\\/discover/)) {\n        return pageEnum.discover;\n    }\n    return pageEnum.noPage;\n}\n\n\n\n\n"],"names":[],"sourceRoot":""}